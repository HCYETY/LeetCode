给你一个仅由数字6和9组成的正整数num。
你最多只能翻转一位数字，将6变成9，或者把9变成6。
请返回你可以得到的最大数字。

示例 1：
输入：num = 9669
输出：9969
解释：
改变第一位数字可以得到 6669 。
改变第二位数字可以得到 9969 。
改变第三位数字可以得到 9699 。
改变第四位数字可以得到 9666 。
其中最大的数字是 9969 。

示例 2：
输入：num = 9996
输出：9999
解释：将最后一位从6变到9，其结果 9999 是最大的数。

示例 3：
输入：num = 9999
输出：9999
解释：无需改变就已经是最大的数字了。


class Solution {
public:
    int maximum69Number (int num) {
        string ans = to_string(num); //先转为字符串
        for(char& number : ans) {    //注意这里要用取地址符，不然无法修改字符串
            if(number == '6') {      //把遇到的第一个6变成9即可
                number = '9';
                break;
            }
        }
        return stoi(ans); //最后转为int返回
    }
};
